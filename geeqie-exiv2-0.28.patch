diff -up geeqie-1.6/src/exiv2.cc.omv~ geeqie-1.6/src/exiv2.cc
--- geeqie-1.6/src/exiv2.cc.omv~	2023-05-18 03:25:31.035257896 +0200
+++ geeqie-1.6/src/exiv2.cc	2023-05-18 03:33:09.554604994 +0200
@@ -42,6 +42,12 @@
 #define HAVE_EXIV2_ERROR_CODE
 #endif
 
+#if EXIV2_TEST_VERSION(0,28,0)
+#define AnyError Error
+#define AutoPtr UniquePtr
+#define toLong toUint32
+#endif
+
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <unistd.h>
@@ -176,7 +182,11 @@ public:
 	{
 		cp_data_ = NULL;
 		cp_length_ = 0;
+#if EXIV2_TEST_VERSION(0,28,0)
+		image_ = std::move(image);
+#else
 		image_ = image;
+#endif
 		valid_ = TRUE;
 	}
 
@@ -363,7 +373,9 @@ public:
 #endif
 			Exiv2::Image *image = imageData_->image();
 
-#ifdef HAVE_EXIV2_ERROR_CODE
+#if EXIV2_TEST_VERSION(0,28,0)
+			if (!image) throw Exiv2::Error(Exiv2::ErrorCode::kerInputDataReadFailed);
+#elif defined(HAVE_EXIV2_ERROR_CODE)
 			if (!image) throw Exiv2::Error(Exiv2::kerInputDataReadFailed);
 #else
 			if (!image) throw Exiv2::Error(21);
@@ -1221,10 +1233,17 @@ guchar *exif_get_preview(ExifData *exif,
 			Exiv2::PreviewImage image = pm.getPreviewImage(*pos);
 
 			Exiv2::DataBuf buf = image.copy();
+#if EXIV2_TEST_VERSION(0,28,0)
+			*data_len = buf.size();
+			Exiv2::byte* data = static_cast<Exiv2::byte*>(malloc(buf.size()));
+			memcpy(data, buf.data(), buf.size());
+			return data;
+#else
 			std::pair<Exiv2::byte*, long> p = buf.release();
 
 			*data_len = p.second;
 			return p.first;
+#endif
 			}
 		return NULL;
 	}
